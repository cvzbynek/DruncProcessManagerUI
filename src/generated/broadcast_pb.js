// source: broadcast.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var generic_pb = require('./generic_pb.js');
goog.object.extend(proto, generic_pb);
var request_response_pb = require('./request_response_pb.js');
goog.object.extend(proto, request_response_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.dunedaq.druncschema.BroadcastMessage', null, global);
goog.exportSymbol('proto.dunedaq.druncschema.BroadcastRequest', null, global);
goog.exportSymbol('proto.dunedaq.druncschema.BroadcastResponse', null, global);
goog.exportSymbol('proto.dunedaq.druncschema.BroadcastType', null, global);
goog.exportSymbol('proto.dunedaq.druncschema.Emitter', null, global);
goog.exportSymbol('proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.displayName = 'proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dunedaq.druncschema.Emitter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dunedaq.druncschema.Emitter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dunedaq.druncschema.Emitter.displayName = 'proto.dunedaq.druncschema.Emitter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dunedaq.druncschema.BroadcastMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dunedaq.druncschema.BroadcastMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dunedaq.druncschema.BroadcastMessage.displayName = 'proto.dunedaq.druncschema.BroadcastMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dunedaq.druncschema.BroadcastRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dunedaq.druncschema.BroadcastRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dunedaq.druncschema.BroadcastRequest.displayName = 'proto.dunedaq.druncschema.BroadcastRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dunedaq.druncschema.BroadcastResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dunedaq.druncschema.BroadcastResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dunedaq.druncschema.BroadcastResponse.displayName = 'proto.dunedaq.druncschema.BroadcastResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    kafkaAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    topic: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration}
 */
proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration;
  return proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration}
 */
proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKafkaAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKafkaAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTopic();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string kafka_address = 1;
 * @return {string}
 */
proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.prototype.getKafkaAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration} returns this
 */
proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.prototype.setKafkaAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string topic = 2;
 * @return {string}
 */
proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.prototype.getTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration} returns this
 */
proto.dunedaq.druncschema.KafkaBroadcastHandlerConfiguration.prototype.setTopic = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dunedaq.druncschema.Emitter.prototype.toObject = function(opt_includeInstance) {
  return proto.dunedaq.druncschema.Emitter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dunedaq.druncschema.Emitter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dunedaq.druncschema.Emitter.toObject = function(includeInstance, msg) {
  var f, obj = {
    process: jspb.Message.getFieldWithDefault(msg, 1, ""),
    session: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dunedaq.druncschema.Emitter}
 */
proto.dunedaq.druncschema.Emitter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dunedaq.druncschema.Emitter;
  return proto.dunedaq.druncschema.Emitter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dunedaq.druncschema.Emitter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dunedaq.druncschema.Emitter}
 */
proto.dunedaq.druncschema.Emitter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSession(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dunedaq.druncschema.Emitter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dunedaq.druncschema.Emitter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dunedaq.druncschema.Emitter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dunedaq.druncschema.Emitter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProcess();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSession();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string process = 1;
 * @return {string}
 */
proto.dunedaq.druncschema.Emitter.prototype.getProcess = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dunedaq.druncschema.Emitter} returns this
 */
proto.dunedaq.druncschema.Emitter.prototype.setProcess = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string session = 2;
 * @return {string}
 */
proto.dunedaq.druncschema.Emitter.prototype.getSession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dunedaq.druncschema.Emitter} returns this
 */
proto.dunedaq.druncschema.Emitter.prototype.setSession = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dunedaq.druncschema.BroadcastMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.dunedaq.druncschema.BroadcastMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dunedaq.druncschema.BroadcastMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dunedaq.druncschema.BroadcastMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    emitter: (f = msg.getEmitter()) && proto.dunedaq.druncschema.Emitter.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dunedaq.druncschema.BroadcastMessage}
 */
proto.dunedaq.druncschema.BroadcastMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dunedaq.druncschema.BroadcastMessage;
  return proto.dunedaq.druncschema.BroadcastMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dunedaq.druncschema.BroadcastMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dunedaq.druncschema.BroadcastMessage}
 */
proto.dunedaq.druncschema.BroadcastMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dunedaq.druncschema.Emitter;
      reader.readMessage(value,proto.dunedaq.druncschema.Emitter.deserializeBinaryFromReader);
      msg.setEmitter(value);
      break;
    case 2:
      var value = /** @type {!proto.dunedaq.druncschema.BroadcastType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dunedaq.druncschema.BroadcastMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dunedaq.druncschema.BroadcastMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dunedaq.druncschema.BroadcastMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dunedaq.druncschema.BroadcastMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmitter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.dunedaq.druncschema.Emitter.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional Emitter emitter = 1;
 * @return {?proto.dunedaq.druncschema.Emitter}
 */
proto.dunedaq.druncschema.BroadcastMessage.prototype.getEmitter = function() {
  return /** @type{?proto.dunedaq.druncschema.Emitter} */ (
    jspb.Message.getWrapperField(this, proto.dunedaq.druncschema.Emitter, 1));
};


/**
 * @param {?proto.dunedaq.druncschema.Emitter|undefined} value
 * @return {!proto.dunedaq.druncschema.BroadcastMessage} returns this
*/
proto.dunedaq.druncschema.BroadcastMessage.prototype.setEmitter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dunedaq.druncschema.BroadcastMessage} returns this
 */
proto.dunedaq.druncschema.BroadcastMessage.prototype.clearEmitter = function() {
  return this.setEmitter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dunedaq.druncschema.BroadcastMessage.prototype.hasEmitter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BroadcastType type = 2;
 * @return {!proto.dunedaq.druncschema.BroadcastType}
 */
proto.dunedaq.druncschema.BroadcastMessage.prototype.getType = function() {
  return /** @type {!proto.dunedaq.druncschema.BroadcastType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.dunedaq.druncschema.BroadcastType} value
 * @return {!proto.dunedaq.druncschema.BroadcastMessage} returns this
 */
proto.dunedaq.druncschema.BroadcastMessage.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Any data = 3;
 * @return {?proto.google.protobuf.Any}
 */
proto.dunedaq.druncschema.BroadcastMessage.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.dunedaq.druncschema.BroadcastMessage} returns this
*/
proto.dunedaq.druncschema.BroadcastMessage.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dunedaq.druncschema.BroadcastMessage} returns this
 */
proto.dunedaq.druncschema.BroadcastMessage.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dunedaq.druncschema.BroadcastMessage.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dunedaq.druncschema.BroadcastRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dunedaq.druncschema.BroadcastRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dunedaq.druncschema.BroadcastRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dunedaq.druncschema.BroadcastRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    broadcastReceiverAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dunedaq.druncschema.BroadcastRequest}
 */
proto.dunedaq.druncschema.BroadcastRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dunedaq.druncschema.BroadcastRequest;
  return proto.dunedaq.druncschema.BroadcastRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dunedaq.druncschema.BroadcastRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dunedaq.druncschema.BroadcastRequest}
 */
proto.dunedaq.druncschema.BroadcastRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBroadcastReceiverAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dunedaq.druncschema.BroadcastRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dunedaq.druncschema.BroadcastRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dunedaq.druncschema.BroadcastRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dunedaq.druncschema.BroadcastRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBroadcastReceiverAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string broadcast_receiver_address = 1;
 * @return {string}
 */
proto.dunedaq.druncschema.BroadcastRequest.prototype.getBroadcastReceiverAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dunedaq.druncschema.BroadcastRequest} returns this
 */
proto.dunedaq.druncschema.BroadcastRequest.prototype.setBroadcastReceiverAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dunedaq.druncschema.BroadcastResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dunedaq.druncschema.BroadcastResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dunedaq.druncschema.BroadcastResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dunedaq.druncschema.BroadcastResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dunedaq.druncschema.BroadcastResponse}
 */
proto.dunedaq.druncschema.BroadcastResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dunedaq.druncschema.BroadcastResponse;
  return proto.dunedaq.druncschema.BroadcastResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dunedaq.druncschema.BroadcastResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dunedaq.druncschema.BroadcastResponse}
 */
proto.dunedaq.druncschema.BroadcastResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dunedaq.druncschema.BroadcastResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dunedaq.druncschema.BroadcastResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dunedaq.druncschema.BroadcastResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dunedaq.druncschema.BroadcastResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.dunedaq.druncschema.BroadcastResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dunedaq.druncschema.BroadcastResponse} returns this
 */
proto.dunedaq.druncschema.BroadcastResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.dunedaq.druncschema.BroadcastType = {
  ACK: 0,
  RECEIVER_REMOVED: 1,
  RECEIVER_ADDED: 2,
  SERVER_READY: 3,
  SERVER_SHUTDOWN: 4,
  TEXT_MESSAGE: 15,
  COMMAND_EXECUTION_START: 5,
  COMMAND_RECEIVED: 16,
  COMMAND_EXECUTION_SUCCESS: 6,
  EXCEPTION_RAISED: 7,
  UNHANDLED_EXCEPTION_RAISED: 8,
  STATUS_UPDATE: 9,
  SUBPROCESS_STATUS_UPDATE: 10,
  DEBUG: 11,
  CHILD_COMMAND_EXECUTION_START: 12,
  CHILD_COMMAND_EXECUTION_SUCCESS: 13,
  CHILD_COMMAND_EXECUTION_FAILED: 14,
  FSM_STATUS_UPDATE: 17
};

goog.object.extend(exports, proto.dunedaq.druncschema);
